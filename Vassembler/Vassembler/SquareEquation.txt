in
in
in
pop rcx
pop rbx
pop rax
push 0
push rax
je line
call sq
hlt

sq:
    call discr
    push 0
    push rdx
    je discr_null
    jb no_solve
    push rdx
    sqrt
    pop rdx

    push -1
    push rbx
    mult
    push rdx
    sub
    push 2
    push rax
    mult
    div
    out

    push -1
    push rbx
    mult
    push rdx
    add
    push 2
    push rax
    mult
    div
    out
ret

line:
    push 0
    push rbx
    je inf_sol
    push -1
    push rcx
    mult
    push rbx
    div
    out
hlt 

discr:
    push rbx
    push rbx
    mult
    push 4
    push rax
    push rcx
    mult
    mult
    sub
    pop rdx
ret

discr_null:
    push -1
    push rbx
    mult
    push 2
    push rax
    mult
    div
    out
hlt
     
inf_sol:
    push rcx
    push 0
    jne no_solve
    call pr_inf_sol
hlt

no_solve:
    push -2
    out
hlt

pr_inf_sol:
    push -1	
    out
ret